name: SonarCloud Notify

on:
  workflow_run:
    workflows: ["SonarCloud"]
    types:
      - completed

jobs:
  notify-telegram:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Get Sonar stats
        id: sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          PROJECT_KEY="HelgaZhizhka_yes-code-merch"
          METRICS="alert_status,coverage,code_smells,bugs,vulnerabilities"
          RESPONSE=$(curl -s -u "${SONAR_TOKEN}:" \
            "https://sonarcloud.io/api/measures/component?component=$PROJECT_KEY&metricKeys=$METRICS")

          echo "$RESPONSE" > result.json
          echo "METRICS_JSON=$RESPONSE" >> $GITHUB_ENV

      - name: Parse and send to Telegram
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          STATUS=$(jq -r '.component.measures[] | select(.metric=="alert_status") | .value' result.json)
          COVERAGE=$(jq -r '.component.measures[] | select(.metric=="coverage") | .value' result.json)
          SMELLS=$(jq -r '.component.measures[] | select(.metric=="code_smells") | .value' result.json)
          BUGS=$(jq -r '.component.measures[] | select(.metric=="bugs") | .value' result.json)
          VULNS=$(jq -r '.component.measures[] | select(.metric=="vulnerabilities") | .value' result.json)

          MESSAGE="üß™ *SonarCloud Report*\n
          üîç Quality Gate: *$STATUS*\n
          ‚úÖ Coverage: *$COVERAGE%*\n
          ‚ö†Ô∏è Code Smells: $SMELLS\n
          üêõ Bugs: $BUGS\n
          üö® Vulnerabilities: $VULNS"

          curl -s -X POST https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage \
            -d chat_id="${TG_CHAT_ID}" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"
