openapi: 3.0.1
info:
  title: "Authentication API"
  version: "1.0.0"
  description: "API endpoints for user registration, login, and logout via Supabase"
servers:
  - url: https://tlnboeuoaezawexbrblg.supabase.co/auth/v1

security:
  - SupabaseKey: []

paths:
  /signup:
    post:
      summary: "Register a new user"
      tags:
        - "Auth"
      security:
        - SupabaseKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpInput"
      responses:
        '200':
          description: "User registered successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        '400':
          description: "Invalid input data"
        '500':
          description: "Server error"

  /token:
    post:
      summary: "Login existing user (Password grant)"
      tags:
        - "Auth"
      security:
        - SupabaseKey: []
      parameters:
        - in: query
          name: grant_type
          required: true
          schema:
            type: string
            enum: [password, refresh_token]
            default: password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInput"
      responses:
        '200':
          description: "User logged in successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        '400':
          description: "Invalid credentials"
        '500':
          description: "Server error"

  /logout:
    post:
      summary: "Logout current user"
      tags:
        - "Auth"
      security:
        - SupabaseKey: []
        - BearerAuth: []
      responses:
        '200':
          description: "User logged out successfully"
        '401':
          description: "Invalid or missing authentication"
        '500':
          description: "Server error"

components:
  securitySchemes:
    SupabaseKey:
      type: apiKey
      in: header
      name: apikey
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SignUpInput:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password
          example: "password123"
        first_name:
          type: string
          example: "Olga"
        last_name:
          type: string
          example: "Ivanova"
        date_of_birth:
          type: string
          format: date
          example: "1978-05-12"
        phone:
          type: string
          example: "+79991234567"
        company:
          type: string
          example: "MyCompany LLC"
        shippingAddress:
          $ref: "#/components/schemas/AddressInput"
        billingAddress:
          $ref: "#/components/schemas/AddressInput"
        useShippingAsBilling:
          type: boolean
          description: "Use shipping address as billing address if true"
          example: true
      required:
        - email
        - password
        - first_name
        - last_name
        - shippingAddress

    LoginInput:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password
          example: "password123"
      required:
        - email
        - password

    AuthResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: "d6a8e3b2-4f5c-11eb-ae93-0242ac130002"
            email:
              type: string
              format: email
              example: "user@example.com"
        session:
          type: object
          properties:
            access_token:
              type: string
            refresh_token:
              type: string
      required:
        - user
        - session

    AddressInput:
      type: object
      properties:
        country:
          type: string
          description: "ISO 3166-1 alpha-2 country code"
          example: "RU"
        city:
          type: string
          example: "Moscow"
        street:
          type: string
          example: "Tverskaya 7"
        postal_code:
          type: string
          example: "125009"
      required:
        - country
        - city
        - street
        - postal_code
